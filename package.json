{
  "name": "coc-metals",
  "version": "v0.5.3",
  "description": "coc.nvim extension for Metals, the Scala language server",
  "keywords": [
    "scala",
    "lsp",
    "language server",
    "scalameta",
    "coc.nvim"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/scalameta/coc-metals"
  },
  "contributors": [
    {
      "name": "ckipp01 <ckipp@pm.me>",
      "url": "https://github.com/ckipp01"
    }
  ],
  "bugs": "https://github.com/scalameta/coc-metals/issues",
  "license": "MIT",
  "engines": {
    "coc": ">=0.0.66"
  },
  "main": "lib/index.js",
  "scripts": {
    "clean": "rimraf lib",
    "build": "parcel build src/index.ts --out-dir lib/ --target node --no-source-maps --experimental-scope-hoisting",
    "format": "prettier --write src/*.ts",
    "format-check": "prettier --check src/*.ts",
    "prepare": "npx npm-run-all clean build"
  },
  "activationEvents": [
    "onLanguage:scala",
    "workspaceContains:build.sbt",
    "workspaceContains:build.sc",
    "workspaceContains:project/build.properties",
    "workspaceContains:**/scala/**"
  ],
  "contributes": {
    "configurationDefaults": {
      "[scala]": {
        "editor.suggestSelection": "first"
      }
    },
    "configuration": {
      "title": "Metals",
      "properties": {
        "metals.serverVersion": {
          "type": "string",
          "default": "0.8.0",
          "markdownDescription": "The version of the Metals server artifact. Requires reloading the window.\n\n**Change only if you know what you're doing**"
        },
        "metals.serverProperties": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Optional list of properties to pass along to the Metals server. By default, the environment variable `JAVA_OPTS` and `.jvmopts` file are respected. \n\nExample: `-Dhttps.proxyHost=… -Dhttps.proxyPort=…` or `-Dmetals.statistics=all`"
        },
        "metals.javaHome": {
          "type": "string",
          "markdownDescription": "Optional path to the Java home directory. Requires reloading the window.\n\nDefaults to the most recent Java 8 version computed by the `locate-java-home` npm package."
        },
        "metals.sbtScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to an `sbt` executable to use for running `sbt bloopInstall`.\n\nBy default, Metals uses `java -jar sbt-launch.jar` with an embedded launcher while respecting `.jvmopts` and `.sbtopts`.\n\nUpdate this setting if your `sbt` script requires more customizations like using environment variables."
        },
        "metals.millScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to a `mill` executable to use for running `mill mill.contrib.Bloop/install`.\n\nBy default, Metals uses an embedded `millw` script while respecting `.mill-version` file.\n\nUpdate this setting if your `mill` script requires more customizations."
        },
        "metals.mavenScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to a `mvn` executable to use for running `mvn ch.epfl.scala:maven-bloop_2.10:<bloop_version>:bloopInstall`.\n\nBy default, Metals uses an embedded `mvnw` script.\n\nUpdate this setting if your `mvn` script requires more customizations."
        },
        "metals.gradleScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to a `gradle` executable to use for running `gradle bloopInstall`.\n\nBy default, Metals uses an embedded `gradlew` ukcript.\n\nUpdate this setting if your `gradle` script requires more customizations."
        },
        "metals.pantsTargets": {
          "type": "string",
          "markdownDescription": "The pants targets to export.\n\nSpace separated list of Pants targets to export, for example `src/main/scala:: src/main/java::`. Syntax such as `src/{main,test}::` is not supported."
        },
        "metals.scalafmtConfigPath": {
          "type": "string",
          "markdownDescription": "Optional custom path to the .scalafmt.conf file.\n\nShould be relative to the workspace root directory and use forward slashes `/` for file separators (even on Windows)."
        },
        "metals.customRepositories": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Optional list of custom resolvers passed to Coursier when fetching metals dependencies.\n\nFor documentation on accepted values see the [Coursier documentation](https://get-coursier.io/docs/other-repositories).\n\nThe extension will pass these to Coursier using the COURSIER_REPOSITORIES environment variable after joining the custom repositories with a pipe character (|)."
        }
      }
    },
    "commands": [
      {
        "command": "metals.restartServer",
        "category": "Metals",
        "title": "Restart server"
      },
      {
        "command": "metals.build-import",
        "category": "Metals",
        "title": "Import build"
      },
      {
        "command": "metals.build-connect",
        "category": "Metals",
        "title": "Connect to build server"
      },
      {
        "command": "metals.sources-scan",
        "category": "Metals",
        "title": "Rescan sources"
      },
      {
        "command": "metals.compile-cascade",
        "category": "Metals",
        "title": "Cascade compile"
      },
      {
        "command": "metals.compile-cancel",
        "category": "Metals",
        "title": "Cancel compilation"
      },
      {
        "command": "metals.doctor-run",
        "category": "metals",
        "title": "run doctor"
      },
      {
        "command": "metals.logs-toggle",
        "category": "metals",
        "title": "Toggle Logs"
      }
    ]
  },
  "devDependencies": {
    "@types/node": "^13.1.7",
    "coc.nvim": "0.0.74",
    "parcel-bundler": "^1.12.4",
    "prettier": "1.19.1",
    "rimraf": "^3.0.0",
    "ts-loader": "^6.0.3",
    "typescript": "3.7.5"
  },
  "dependencies": {
    "@types/semver": "^6.2.0",
    "@types/shell-quote": "^1.6.1",
    "locate-java-home": "^1.1.2",
    "promisify-child-process": "^3.1.3",
    "semver": "^7.1.1",
    "shell-quote": "^1.7.2",
    "vscode-languageserver-protocol": "^3.15.0"
  }
}
